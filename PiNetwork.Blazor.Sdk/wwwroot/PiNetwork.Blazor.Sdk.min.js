function onIncompletePaymentFound(n){myDotNetHelper.invokeMethodAsync("CreatePaymentOnIncopletePaymentFound",n.identifier,n.transaction.txid)}const scopes=["payments","username","wallet_address"];let myDotNetHelper;(function(){window.PiNetworkBlazorSdk={Authenticate:function(n,t,i){myDotNetHelper=n;Pi.authenticate(scopes,onIncompletePaymentFound).then(function(i){n.invokeMethodAsync("AuthenticateOnSuccess",JSON.stringify(i),t)}).catch(function(r){n.invokeMethodAsync("AuthenticateOnError",JSON.stringify(r,t,i))})},CreatePayment:function(n,t,i,r){myDotNetHelper=n;Pi.createPayment({amount:t,memo:i,metadata:{orderId:r}},{onReadyForServerApproval:function(t){n.invokeMethodAsync("CreatePaymentOnReadyForServerApproval",t)},onReadyForServerCompletion:function(t,i){n.invokeMethodAsync("CreatePaymentOnReadyForServerCompletion",t,i)},onCancel:function(t){n.invokeMethodAsync("CreatePaymentOnCancel",t)},onError:function(t,i){typeof i=="undefined"||i===null||i.length===0?n.invokeMethodAsync("CreatePaymentOnError",null,null):n.invokeMethodAsync("CreatePaymentOnError",i.identifier,i.transaction.txid)}})},OpenShareDialog:function(n,t){Pi.openShareDialog(n,t)}};window.Browser={IsPiNetworkBrowser:function(n){navigator.userAgent.toLowerCase().includes("pibrowser")&&n.invokeMethodAsync("IsPiNetworkBrowser")}}})();